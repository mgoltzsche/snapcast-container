apiVersion: apps/v1
kind: Deployment
metadata: # kpt-merge: /blueprint
  name: snapcast # kpt-set: ${name}
  annotations:
    internal.kpt.dev/upstream-identifier: 'apps|Deployment|default|blueprint'
spec:
  replicas: 1
  strategy:
    type: Recreate
  progressDeadlineSeconds: 300
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: webapp
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webapp
    spec:
      serviceAccountName: snapcast # kpt-set: ${name}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 4242
      containers:
      - name: app
        image: ghcr.io/mgoltzsche/snapcast-server:0.9.0 # kpt-set: ${image}:${version}
        imagePullPolicy: IfNotPresent
        env:
        - name: LIBRESPOT_OPTS
          value: --zeroconf-port=30021
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
        ports:
        - containerPort: 1780 # kpt-set: ${port}
        - containerPort: 1705 # jsonrpc
        - containerPort: 1704 # stream
        - containerPort: 1709 # audio input
        - containerPort: 30021 # librespot
        livenessProbe:
          httpGet:
            path: "/" # kpt-set: ${healthcheck}
            port: 1780 # kpt-set: ${port}
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: "/" # kpt-set: ${healthcheck}
            port: 1780 # kpt-set: ${port}
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 2
          initialDelaySeconds: 1
        securityContext:
          runAsGroup: 4242
          runAsUser: 4242
        volumeMounts:
        - name: state
          mountPath: /var/lib/snapserver
      volumes:
      - name: state
        persistentVolumeClaim:
          claimName: snapcast-state # kpt-set: ${name}-state
